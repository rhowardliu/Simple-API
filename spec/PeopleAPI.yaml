openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/m3175/People/1.0.0
info:
  title: Hello People
  description: people API
  version: "1.0.0"
paths:
  /people:
    get: 
      summary: Returns list of people available
      operationId: listPeople
      parameters: 
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/peopleResponse'
        default:
          $ref: '#/components/responses/errorResponse'
    
    post:
      summary: Adds a new person to the list
      operationId: addPerson
      requestBody:
        $ref: '#/components/requestBodies/newPersonRequest' 
      responses:
          '201':
            $ref: '#/components/responses/personResponse'
          default:
            $ref: '#/components/responses/errorResponse'
  /people/{peopleId}:
    get:
      summary: Returns a single person
      operationId: getPersonById
      parameters: 
        - name: peopleId
          in: path
          description: ID of a person to fetch
          required: true
          schema:
            $ref: '#/components/schemas/integerSchema'
      responses:
        '200':
          $ref: '#/components/responses/personResponse'
        default:
          $ref: '#/components/responses/errorResponse'
    delete:
      summary: Delete a person from the list
      operationId: deletePersonById
      parameters:
        - name: peopleId
          in: path
          description: ID of a person to delete
          required: true
          schema:
            $ref: '#/components/schemas/integerSchema'
      responses:
        '202':
          $ref: '#/components/responses/personResponse'
        default:
          $ref: '#/components/responses/errorResponse'
    put:
      summary: Update an existing person
      operationId: updatePersonById
      parameters: 
        - name: peopleId
          in: path
          description: ID of a person to update
          required: true
          schema:
            $ref: '#/components/schemas/integerSchema'
      requestBody:
        $ref: '#/components/requestBodies/newPersonRequest'
      responses:
          '202':
            $ref: '#/components/responses/personResponse'
          default:
            $ref: '#/components/responses/errorResponse'


components:
  parameters:
    peopleId:
      name: peopleId
      in: path
      description: ID of a person
      required: true
      schema:
        $ref: '#/components/schemas/integerSchema'
    limit:
      name: limit
      in: query
      description: limit of return
      required: true
      schema:
        $ref: '#/components/schemas/integerSchema'
    offset:
      name: offset
      in: query
      description: offset for pagination
      schema:
        $ref: '#/components/schemas/integerSchema'
  requestBodies:
    newPersonRequest:
      required: true
      description: new Person to add
      content:
       application/hal+json:
        schema:
          $ref: '#/components/schemas/NewPerson'
  responses:
    peopleResponse:
      description: Return list of people
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/People'
    personResponse:
      description: Returns a person
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Person'
    errorResponse:
      description: unexpected
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    People:
      properties:
        count:
          $ref: '#/components/schemas/integerSchema'
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    Person:
      allOf:
        - $ref: '#/components/schemas/NewPerson'
        - type: object 
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/integerSchema'
    NewPerson:
      properties:
        _links:
          allOf:
          - $ref: '#/components/schemas/halLinkSelfSchema'
        name:
          type: string
          example: Nassim Taleb
        birthDate:
          type: string
          example: 1960-12-29
        hobby:
          type: string
          example: Debate
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: 404
        message:
          type: string
          example: Page Not Found
    halLinkSchema:
      type: object
      required:
        - href
      properties:
        href:
          type: string
          example: '<baseurl>/people/1'
    halLinkSelfSchema:
      type: object
      required:
        - self
      properties:
        self:
          $ref: '#/components/schemas/halLinkSchema'
    integerSchema:
      type: integer
      format: int64
      example: 1